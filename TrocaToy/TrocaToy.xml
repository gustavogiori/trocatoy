<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TrocaToy</name>
    </assembly>
    <members>
        <member name="T:TrocaToy.Business.BrinquedoBusiness">
            <summary>
            Camada de negócio
            </summary>
        </member>
        <member name="M:TrocaToy.Business.BrinquedoBusiness.#ctor(TrocaToy.Repository.IBrinquedoRepository)">
            <summary>
            Construção
            </summary>
            <param name="brinquedoRepository"></param>
        </member>
        <member name="T:TrocaToy.Business.CidadeBusiness">
            <summary>
            Camada de regra de negócio cidade
            </summary>
        </member>
        <member name="M:TrocaToy.Business.CidadeBusiness.#ctor(TrocaToy.Repository.ICidadeRepository)">
            <summary>
            UsuarioBusiness
            </summary>
            <param name="repository"></param>
        </member>
        <member name="T:TrocaToy.Business.EstadoBusiness">
            <summary>
            EstadoBusiness
            </summary>
        </member>
        <member name="M:TrocaToy.Business.EstadoBusiness.#ctor(TrocaToy.Repository.IEstadoRepository)">
            <summary>
            Construtor
            </summary>
            <param name="estadoRepository"></param>
        </member>
        <member name="T:TrocaToy.Business.IBrinquedoBusiness">
            <summary>
            IBrinquedoBusiness
            </summary>
        </member>
        <member name="T:TrocaToy.Business.ICidadeBusiness">
            <summary>
            ICidadeBusiness
            </summary>
        </member>
        <member name="T:TrocaToy.Business.IEstadoBusiness">
            <summary>
            Estado business
            </summary>
        </member>
        <member name="T:TrocaToy.Business.IUsuarioBusiness">
            <summary>
            IUsuarioBusiness
            </summary>
        </member>
        <member name="T:TrocaToy.Business.UsuarioBusiness">
            <summary>
            UsuarioBusiness
            </summary>
        </member>
        <member name="M:TrocaToy.Business.UsuarioBusiness.#ctor(TrocaToy.Repository.IUsuarioRepository)">
            <summary>
            UsuarioBusiness
            </summary>
            <param name="repository"></param>
        </member>
        <member name="M:TrocaToy.Business.UsuarioBusiness.Insert(TrocaToy.Models.Usuario)">
            <summary>
            Inserindo dados
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:TrocaToy.Controllers.v1.BaseController">
            <summary>
            Controle base
            </summary>
        </member>
        <member name="M:TrocaToy.Controllers.v1.BaseController.#ctor(Microsoft.EntityFrameworkCore.DbContext,Infrastructure.UnitWork.IUnitOfWork,Infrastructure.Services.IUriService)">
            <summary>
            Construtor
            </summary>
            <param name="context"></param>
            <param name="unitOfWork"></param>
            <param name="uriService"></param>
        </member>
        <member name="F:TrocaToy.Controllers.v1.BaseController._context">
            <summary>
            Base de dados
            </summary>
        </member>
        <member name="F:TrocaToy.Controllers.v1.BaseController._unitOfWork">
            <summary>
            Unidade de trabalho
            </summary>
        </member>
        <member name="F:TrocaToy.Controllers.v1.BaseController._uriService">
            <summary>
            Uri Service
            </summary>
        </member>
        <member name="T:TrocaToy.Controllers.v1.BrinquedosController">
            <summary>
            Controler brinquedos
            </summary>
        </member>
        <member name="M:TrocaToy.Controllers.v1.BrinquedosController.#ctor(Microsoft.EntityFrameworkCore.DbContext,Infrastructure.UnitWork.IUnitOfWork,Infrastructure.Services.IUriService,TrocaToy.Business.IBrinquedoBusiness)">
            <summary>
            Constructor
            </summary>
            <param name="context"></param>
            <param name="unitOfWork"></param>
            <param name="uriService"></param>
            <param name="brinquedoBusiness"></param>
        </member>
        <member name="M:TrocaToy.Controllers.v1.BrinquedosController.GetBrinquedo(Infrastructure.Filter.PaginationFilter)">
            <summary>
            Retornar todos os brinquedos
            </summary>
            <returns>Lista de brinquedos</returns>
            <response code="200">Retorna lista com todos brinquedos</response>
            <response code="401">Retorna quando não estiver autenticado.</response>
        </member>
        <member name="M:TrocaToy.Controllers.v1.BrinquedosController.GetBrinquedoCriteria(System.String,System.String,Infrastructure.Filter.PaginationFilter)">
            <summary>
            Retorna brinquedo conforme Filtro utilizando um campo e o valor desejado
            </summary>
            <returns>Brinquedo conforme filtro</returns>
            <response code="200">Retorna o brinquedo conforme ID</response>
            <response code="404">Retorna quando não tiver encontrado.</response>
        </member>
        <member name="M:TrocaToy.Controllers.v1.BrinquedosController.GetBrinquedo(System.Guid)">
            <summary>
            Retorna brinquedo conforme ID
            </summary>
            <returns>Brinquedo conforme id</returns>
            <response code="200">Retorna o brinquedo conforme ID</response>
            <response code="404">Retorna quando não tiver encontrado.</response>
        </member>
        <member name="M:TrocaToy.Controllers.v1.BrinquedosController.PutBrinquedo(System.Guid,TrocaToy.Models.Brinquedo)">
            Put api/v1/brinquedos/id
            <summary>
            Altera dados do brinquedo
            </summary>
            <returns>Brinquedo</returns>
            <response code="204">Retorna se o brinquedo foi alterado com sucesso</response>
            <response code="400">Retorna se houve algum erro na alteração do usuário.</response>
            <response code="404">Retorna se o brinquedo não foi encontrado.</response>
            <response code="401">Retorna quando não estiver autenticado.</response>
        </member>
        <member name="M:TrocaToy.Controllers.v1.BrinquedosController.PostBrinquedo(TrocaToy.Models.Brinquedo)">
            Put api/v1/brinquedos/id
            <summary>
            Altera dados do binquedo
            </summary>
            <returns>Brinquedo</returns>
            <response code="201">Retorna se o brinquedo foi criado com sucesso</response>
            <response code="400">Retorna se houve algum erro na criação do usuário.</response>
        </member>
        <member name="M:TrocaToy.Controllers.v1.BrinquedosController.DeleteBrinquedo(System.Guid)">
            Delete api/v1/brinquedos/id
            <summary>
            Deleta dados do brinquedo
            </summary>
            <returns>Lista de usuários</returns>
            <response code="200">Retorna se o brinquedo foi deletado com sucesso.</response>
            <response code="409">Retorna se houve algum erro na deleção </response>
            <response code="404">Retorna se o brinquedo não foi encontrado.</response>
            <response code="401">Retorna quando não estiver autenticado.</response>
        </member>
        <member name="T:TrocaToy.Controllers.v1.CidadesController">
            <summary>
            Controle estado
            </summary>
        </member>
        <member name="M:TrocaToy.Controllers.v1.CidadesController.#ctor(Microsoft.EntityFrameworkCore.DbContext,Infrastructure.UnitWork.IUnitOfWork,Infrastructure.Services.IUriService,TrocaToy.Business.ICidadeBusiness)">
            <summary>
            EstadosController
            </summary>
            <param name="context"></param>
            <param name="unitOfWork"></param>
            <param name="uriService"></param>
            <param name="cidadeRepository"></param>
        </member>
        <member name="M:TrocaToy.Controllers.v1.CidadesController.GetCidade">
            <summary>
            Retornar todas as cidades
            </summary>
            <returns>Lista de usuários</returns>
            <response code="200">Retorna lista com todos cidades</response>
            <response code="401">Retorna quando não estiver autenticado.</response>
        </member>
        <member name="M:TrocaToy.Controllers.v1.CidadesController.GetCidade(System.Guid)">
            Get api/v1/usuarios/id
            <summary>
            Retorna cidaded conforme ID
            </summary>
            <returns>Lista de usuários</returns>
            <response code="200">Retorna o cidade conforme ID</response>
            <response code="401">Retorna quando não estiver autenticado.</response>
        </member>
        <member name="M:TrocaToy.Controllers.v1.CidadesController.PutCidade(System.Guid,TrocaToy.Models.Cidade)">
            Put api/v1/usuarios/id
            <summary>
            Altera dados do cidade
            </summary>
            <returns>Lista de usuários</returns>
            <response code="204">Retorna se o cidade foi alterado com sucesso</response>
            <response code="400">Retorna se houve algum erro na alteração do cidade.</response>
            <response code="404">Retorna se o cidade não foi encontrado.</response>
            <response code="401">Retorna quando não estiver autenticado.</response>
        </member>
        <member name="M:TrocaToy.Controllers.v1.CidadesController.PostCidade(TrocaToy.Models.Cidade)">
            Put api/v1/cidades/id
            <summary>
            Altera dados do cidade
            </summary>
            <returns>Lista de cidade</returns>
            <response code="201">Retorna se a cidade foi criado com sucesso</response>
            <response code="400">Retorna se houve algum erro na criação da cidade.</response>
        </member>
        <member name="M:TrocaToy.Controllers.v1.CidadesController.DeleteCidade(System.Guid)">
            Delete api/v1/usuarios/id
            <summary>
            Altera dados da cidade
            </summary>
            <returns>Lista de usuários</returns>
            <response code="200">Retorna se a cidade foi deletado com sucesso.</response>
            <response code="409">Retorna se houve algum erro na deleção da cidade.</response>
            <response code="404">Retorna se a cidade não foi encontrado.</response>
            <response code="401">Retorna quando não estiver autenticado.</response>
        </member>
        <member name="T:TrocaToy.Controllers.v1.EstadosController">
            <summary>
            Controle estado
            </summary>
        </member>
        <member name="M:TrocaToy.Controllers.v1.EstadosController.#ctor(Microsoft.EntityFrameworkCore.DbContext,Infrastructure.UnitWork.IUnitOfWork,Infrastructure.Services.IUriService,TrocaToy.Business.IEstadoBusiness)">
            <summary>
            EstadosController
            </summary>
            <param name="context"></param>
            <param name="unitOfWork"></param>
            <param name="uriService"></param>
            <param name="estadoRepository"></param>
        </member>
        <member name="M:TrocaToy.Controllers.v1.EstadosController.GetEstado">
            <summary>
            Retornar todos os estados
            </summary>
            <returns>Lista de usuários</returns>
            <response code="200">Retorna lista com todos estados</response>
            <response code="401">Retorna quando não estiver autenticado.</response>
        </member>
        <member name="M:TrocaToy.Controllers.v1.EstadosController.GetEstado(System.Guid)">
            Get api/v1/usuarios/id
            <summary>
            Retorna estado conforme ID
            </summary>
            <returns>Lista de usuários</returns>
            <response code="200">Retorna o estado conforme ID</response>
            <response code="401">Retorna quando não estiver autenticado.</response>
        </member>
        <member name="M:TrocaToy.Controllers.v1.EstadosController.PutEstado(System.Guid,TrocaToy.Models.Estado)">
            Put api/v1/usuarios/id
            <summary>
            Altera dados do estado
            </summary>
            <returns>Lista de usuários</returns>
            <response code="204">Retorna se o estado foi alterado com sucesso</response>
            <response code="400">Retorna se houve algum erro na alteração do estado.</response>
            <response code="404">Retorna se o estado não foi encontrado.</response>
            <response code="401">Retorna quando não estiver autenticado.</response>
        </member>
        <member name="M:TrocaToy.Controllers.v1.EstadosController.PostEstado(TrocaToy.Models.Estado)">
            Put api/v1/usuarios/id
            <summary>
            Altera dados do estado
            </summary>
            <returns>Lista de estado</returns>
            <response code="201">Retorna se o usuário foi criado com sucesso</response>
            <response code="400">Retorna se houve algum erro na criação do estado.</response>
        </member>
        <member name="M:TrocaToy.Controllers.v1.EstadosController.DeleteEstado(System.Guid)">
            Delete api/v1/usuarios/id
            <summary>
            deleta dados do estado
            </summary>
            <returns>Lista de usuários</returns>
            <response code="200">Retorna se o usuário foi deletado com sucesso.</response>
            <response code="409">Retorna se houve algum erro na deleção do usuário.</response>
            <response code="404">Retorna se o usuário não foi encontrado.</response>
            <response code="401">Retorna quando não estiver autenticado.</response>
        </member>
        <member name="M:TrocaToy.Controllers.v1.LoginController.Authenticate(Infrastructure.Models.UsuarioLogin)">
            <summary>
            Realiza login na aplicação
            </summary>
            <param name="model"></param>
            <returns>Um novo item criado</returns>
            <response code="200">Retorna quando o usuário e senha está correto, e retorna também o token para autenticação</response>
            <response code="404">Retorna se o usuário ou senha estiverem errados.</response>    
        </member>
        <member name="T:TrocaToy.Controllers.UsuariosController">
            <summary>
            Controle usuário
            </summary>
        </member>
        <member name="M:TrocaToy.Controllers.UsuariosController.#ctor(Microsoft.EntityFrameworkCore.DbContext,Infrastructure.UnitWork.IUnitOfWork,Infrastructure.Services.IUriService,TrocaToy.Business.IUsuarioBusiness)">
            <summary>
            Constructor
            </summary>
            <param name="context"></param>
            <param name="usuarioBusiness"></param>
            <param name="unitOfWork"></param>
            <param name="uriService"></param>
        </member>
        <member name="M:TrocaToy.Controllers.UsuariosController.GetUsuario">
            <summary>
            Retornar todos os usuários
            </summary>
            <returns>Lista de usuários</returns>
            <response code="200">Retorna lista com todos usuários</response>
            <response code="401">Retorna quando não estiver autenticado.</response>
        </member>
        <member name="M:TrocaToy.Controllers.UsuariosController.GetUsuario(System.Guid)">
            Get api/v1/usuarios/id
            <summary>
            Retorna usuário conforme ID
            </summary>
            <returns>Lista de usuários</returns>
            <response code="200">Retorna o usuário conforme ID</response>
            <response code="401">Retorna quando não estiver autenticado.</response>
        </member>
        <member name="M:TrocaToy.Controllers.UsuariosController.PutUsuario(System.Guid,TrocaToy.Models.Usuario)">
            Put api/v1/usuarios/id
            <summary>
            Altera dados do usuário
            </summary>
            <returns>Lista de usuários</returns>
            <response code="204">Retorna se o usuário foi alterado com sucesso</response>
            <response code="400">Retorna se houve algum erro na alteração do usuário.</response>
            <response code="404">Retorna se o usuário não foi encontrado.</response>
            <response code="401">Retorna quando não estiver autenticado.</response>
        </member>
        <member name="M:TrocaToy.Controllers.UsuariosController.PostUsuario(TrocaToy.Models.Usuario)">
            Put api/v1/usuarios/id
            <summary>
            Altera dados do usuário
            </summary>
            <returns>Lista de usuários</returns>
            <response code="201">Retorna se o usuário foi criado com sucesso</response>
            <response code="400">Retorna se houve algum erro na criação do usuário.</response>
        </member>
        <member name="M:TrocaToy.Controllers.UsuariosController.DeleteUsuario(System.Guid)">
            Delete api/v1/usuarios/id
            <summary>
            Altera dados do usuário
            </summary>
            <returns>Lista de usuários</returns>
            <response code="200">Retorna se o usuário foi deletado com sucesso.</response>
            <response code="409">Retorna se houve algum erro na deleção do usuário.</response>
            <response code="404">Retorna se o usuário não foi encontrado.</response>
            <response code="401">Retorna quando não estiver autenticado.</response>
        </member>
        <member name="T:TrocaToy.GraphQL.BrinquedoQuery">
            <summary>
            Implementação GraphQL
            </summary>
        </member>
        <member name="M:TrocaToy.GraphQL.BrinquedoQuery.#ctor(TrocaToy.Business.IBrinquedoBusiness)">
            <summary>
            BrinquedoQuery
            </summary>
            <param name="brinquedoBusiness"></param>
        </member>
        <member name="T:TrocaToy.GraphQL.BrinquedoSchema">
            <summary>
            Schema
            </summary>
        </member>
        <member name="M:TrocaToy.GraphQL.BrinquedoSchema.#ctor(GraphQL.IDependencyResolver)">
            <summary>
            BrinquedoSchema
            </summary>
            <param name="resolver"></param>
        </member>
        <member name="T:TrocaToy.GraphQL.BrinquedoType">
            <summary>
            Tipo brinquedo
            </summary>
        </member>
        <member name="M:TrocaToy.GraphQL.BrinquedoType.#ctor">
            <summary>
            Construtor
            </summary>
        </member>
        <member name="T:TrocaToy.Repository.BrinquedoRepository">
            <summary>
            Repositorio para criação de brinquedos
            </summary>
        </member>
        <member name="M:TrocaToy.Repository.BrinquedoRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
            Constructor
            </summary>
            <param name="context">Context banco de dados</param>
        </member>
        <member name="T:TrocaToy.Repository.CidadeRepository">
            <summary>
            CidadeRepository
            </summary>
        </member>
        <member name="M:TrocaToy.Repository.CidadeRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
            Constructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:TrocaToy.Repository.EstadoRepository">
            <summary>
            EstadoRepository
            </summary>
        </member>
        <member name="M:TrocaToy.Repository.EstadoRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
            Constructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:TrocaToy.Repository.ICidadeRepository">
            <summary>
            ICidadeRepository
            </summary>
        </member>
        <member name="T:TrocaToy.Repository.IUsuarioRepository">
            <summary>
            Interface repositório usuário
            </summary>
        </member>
        <member name="T:TrocaToy.Repository.UsuarioRepository">
            <summary>
            Repositorio crud Usuario
            </summary>
        </member>
        <member name="M:TrocaToy.Repository.UsuarioRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
            Constructor
            </summary>
            <param name="context"></param>
        </member>
    </members>
</doc>
